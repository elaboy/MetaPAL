using System.ComponentModel.DataAnnotations.Schema;
using System.ComponentModel.DataAnnotations;
using MassSpectrometry;
using Readers;

namespace MetaPAL.Models
{
    [Table("DataFiles")]
    public class DataFile
    {
        [Key]
        public int Id { get; set; } //autogenerated unique id

        [ForeignKey("Experiment")]
        public int ExperimentId { get; set; }

        public string? FileNameWithoutExtension { get; set; }

        public virtual List<MetaData> MetaData { get; set; }

        //public virtual List<DataScan> DataScans { get; set; }
        //public virtual Experiment Experiment { get; set; }
        //public virtual List<SpectrumMatch>? SpectrumMatches { get; set; }

        public static DataFile FromMsDataFile(MsDataFile msDataFile, int experimentId, List<MetaData> metaData = null)
        {
            DataFile dataFile = new DataFile();
            dataFile.ExperimentId = experimentId;
            dataFile.FileNameWithoutExtension = Path.GetFileNameWithoutExtension(msDataFile.FilePath);
            dataFile.MetaData = metaData ?? new List<MetaData>();
            return dataFile;
        }

        public static DataFile FromFilePath(string filePath, int experimentId, List<MetaData> metaData = null)
        {
            var msDataFile = MsDataFileReader.GetDataFile(filePath);
            return FromMsDataFile(msDataFile, experimentId, metaData);
        }
    }

    [Table("Experiments")]
    public class Experiment
    {
        [Key]
        public int Id { get; set; } //autogenerated unique id

        public string? RepositoryIdentifier { get; set; }

        public virtual List<DataFile> DataFiles { get; set; }

        public virtual List<SpectrumMatch>? SpectrumMatches { get; set; }
    }

    [Table("MetaData")]
    public class MetaData
    {
        [Key]
        public int Id { get; set; } //autogenerated unique id
        public string Name { get; set; }
        public string Value { get; set; }
    }
}